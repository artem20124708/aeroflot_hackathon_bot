import telebot
import requests
import json
import json
from telebot import types
from roadDocs import roadDocsParse

bot = telebot.TeleBot('5483501827:AAH99o-4cJpBJvyGES1nXESQLEO59ynUKpA')

#–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é
@bot.message_handler(commands=['start'])
def start(message):
    mess = f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>{message.from_user.first_name}!</b>\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é.'
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buyTickets_btn = types.KeyboardButton('‚úàÔ∏è –ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç')
    onlineRegister_btn = types.KeyboardButton('üé´ –û–Ω–ª–∞–π–Ω-—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
    bookingStatus_btn = types.KeyboardButton('üìî –°—Ç–∞—Ç—É—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è')
    onlineTimetable_btn = types.KeyboardButton('üóì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–π—Å–µ')
    tecSupport_btn = types.KeyboardButton('‚ùì –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞')
    specialOffers_btn = types.KeyboardButton('üéÅ –°–ø–µ—Ü–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')
    business_btn = types.KeyboardButton('üíº –ë–∏–∑–Ω–µ—Å')
    information_btn = types.KeyboardButton('üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
    covidInfo_btn = types.KeyboardButton('ü¶† –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Covid19')
    markup.add(buyTickets_btn, onlineRegister_btn, bookingStatus_btn, onlineTimetable_btn, tecSupport_btn, specialOffers_btn, business_btn, information_btn, covidInfo_btn)
    bot.send_message(message.chat.id, mess, parse_mode='html', reply_markup=markup)

#–°—Ü–µ–Ω–∞—Ä–∏–π –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
@bot.message_handler(content_types=['text'])
def firstStep(message):
    if message.text == '‚úàÔ∏è –ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç':
        markup = types.InlineKeyboardMarkup(row_width=1)
        buyTicketsSite_btn = types.InlineKeyboardButton('–°–∞–π—Ç Aeroflot', url='https://www.aeroflot.ru/sb/app/ru-ru#/search')
        buyTicketsBot_btn = types.InlineKeyboardButton('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç (–î–ï–ú–û)', callback_data='buyTickets_useBot')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(buyTicketsSite_btn, buyTicketsBot_btn, back_btn)
        bot.send_message(message.chat.id, '–í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è <b>–±–æ—Ç–æ–º</b> –∏–ª–∏ <b>–ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç</b>.', parse_mode='html', reply_markup=markup)
    if message.text == 'üé´ –û–Ω–ª–∞–π–Ω-—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è':
        markup = types.InlineKeyboardMarkup()
        onlineRegisterSite_btn = types.InlineKeyboardButton('–û–Ω–ª–∞–π–Ω-—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', url='https://www.aeroflot.ru/sb/ckin/app/ru-ru#/search_pnrs')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(onlineRegisterSite_btn, back_btn)
        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ –æ–Ω–ª–∞–π–Ω-—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é <b>–ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç</b>.', parse_mode='html', reply_markup=markup)
    if message.text == 'üìî –°—Ç–∞—Ç—É—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è':
        markup = types.InlineKeyboardMarkup(row_width=1)
        bookingStatusSite_btn = types.InlineKeyboardButton('–°–∞–π—Ç Aeroflot', url='https://www.aeroflot.ru/sb/pnr/app/ru-ru#/search')
        bookingStatusBot_btn = types.InlineKeyboardButton('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç (–î–ï–ú–û)', callback_data='bookingStatus_useBot')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(bookingStatusSite_btn, bookingStatusBot_btn, back_btn)
        bot.send_message(message.chat.id, '–í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è <b>–±–æ—Ç–æ–º</b> –∏–ª–∏ <b>–ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç</b>.', parse_mode='html', reply_markup=markup)
    if message.text == 'üóì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–π—Å–µ':
        markup = types.InlineKeyboardMarkup(row_width=1)
        onlineTimetableSite_btn = types.InlineKeyboardButton('–°–∞–π—Ç Aeroflot', url='https://flights.aeroflot.ru/ru-ru/onlineboard')
        onlineTimetableBot_btn = types.InlineKeyboardButton('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç', callback_data='onlineTimetable_useBot')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(onlineTimetableSite_btn, onlineTimetableBot_btn, back_btn)
        bot.send_message(message.chat.id, '–í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è <b>–±–æ—Ç–æ–º</b> –∏–ª–∏ <b>–ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç</b>.', parse_mode='html', reply_markup=markup)
    if message.text == '‚ùì –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞':
        markup = types.InlineKeyboardMarkup()
        tecSupportSite_btn = types.InlineKeyboardButton('–°–∞–π—Ç Aeroflot', url='https://www.aeroflot.ru/ru-ru/help')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(tecSupportSite_btn, back_btn)
        bot.send_message(message.chat.id, '–î–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å <b>—Ñ–æ—Ä–º–æ–π –Ω–∞ —Å–∞–π—Ç–µ</b>.', parse_mode='html', reply_markup=markup)
    if message.text == 'üéÅ –°–ø–µ—Ü–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è':
        markup = types.InlineKeyboardMarkup(row_width=1)
        specialOffersRates_btn = types.InlineKeyboardButton('–¢–∞—Ä–∏—Ñ—ã –∏ –∞–∫—Ü–∏–∏', url='https://www.aeroflot.ru/ru-ru/destination_offers')
        specialOffersGiftsCert_btn = types.InlineKeyboardButton('–ü–æ–¥–∞—Ä–æ—á–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã', url='https://www.aeroflot.ru/giftcert/buy?_preferredLanguage=ru')
        specialOffersForPensioners_btn = types.InlineKeyboardButton('–î–ª—è –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–æ–≤', url='https://www.aeroflot.ru/ru-ru/pensioner')
        specialOffersForYouth_btn = types.InlineKeyboardButton('–î–ª—è –º–æ–ª–æ–¥—ë–∂–∏', url='https://www.aeroflot.ru/ru-ru/youth_fares')
        specialOffersCallCenter_btn = types.InlineKeyboardButton('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç —Ü–µ–Ω—Ç—Ä–æ–º', callback_data='callCenter')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(specialOffersRates_btn, specialOffersGiftsCert_btn, specialOffersForPensioners_btn, specialOffersForYouth_btn, specialOffersCallCenter_btn, back_btn)
        bot.send_message(message.chat.id, '–°–ø–µ—Ü–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:', reply_markup=markup)
    if message.text == 'üíº –ë–∏–∑–Ω–µ—Å':
        markup = types.InlineKeyboardMarkup(row_width=1)
        businessTrucking_btn = types.InlineKeyboardButton('–ì—Ä—É–∑–æ–≤—ã–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏', callback_data='businessTrucking')
        businessPass_btn = types.InlineKeyboardButton('–î–µ–ª–æ–≤–æ–π –ø—Ä–æ–µ–∑–¥–Ω–æ–π', url='https://www.aeroflot.ru/ru-ru/special_offers/business_travel')
        businessCorporateClients_btn = types.InlineKeyboardButton('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º', callback_data='businessCorporateClients')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(businessTrucking_btn, businessPass_btn, businessCorporateClients_btn, back_btn)
        bot.send_message(message.chat.id, '–ë–∏–∑–Ω–µ—Å:', reply_markup=markup)
    if message.text == 'üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
        markup = types.InlineKeyboardMarkup(row_width=1)
        informationInAirport_btn = types.InlineKeyboardButton('–í –∞—ç—Ä–æ–ø–æ—Ä—Ç—É', callback_data='informationInAirport')
        informationOnBoard_btn = types.InlineKeyboardButton('–ù–∞ –±–æ—Ä—Ç—É', callback_data='informationOnBoard')
        informationForPassengers_btn = types.InlineKeyboardButton('–î–ª—è –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤', callback_data='informationForPassengers')
        informationLegalInfo_btn = types.InlineKeyboardButton('–ü—Ä–∞–≤–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', callback_data='informationLegalInfo')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(informationInAirport_btn, informationOnBoard_btn, informationForPassengers_btn, informationLegalInfo_btn, back_btn)
        bot.send_message(message.chat.id, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:', reply_markup=markup)
    if message.text == 'ü¶† –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Covid19':
        markup = types.InlineKeyboardMarkup(row_width=1)
        informationCovidSiteInfo_btn = types.InlineKeyboardButton('–°–∞–π—Ç Aeroflot', url='https://www.aeroflot.ru/ru-ru/covid-19')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(informationCovidSiteInfo_btn, back_btn)
        bot.send_message(message.chat.id, '–û–∑–Ω–∞–∫–æ–º—Ç–µ—Å—å —Å –∏—Ñ–Ω–æ—Ä–º–∞—Ü–∏–µ–π –æ Covid19 –Ω–∞ <b>—Å–∞–π—Ç–µ</b>:', parse_mode='html', reply_markup=markup)


#–°—Ü–µ–Ω–∞—Ä–∏–π –ø–æ –Ω–∞–∂–∞—Ç–∏—é inline –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call:True)
def inlineButtonsReaction(call):
    if call.data == 'buyTickets_useBot':
        outCity_msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ <b>–≥–æ—Ä–æ–¥ –≤—ã–ª–µ—Ç–∞</b>.', parse_mode='html')
        bot.register_next_step_handler(outCity_msg, outCity_get)
    if call.data == 'bookingStatus_useBot':
        booking_example = open('img/booking_code.jpg', 'rb')
        bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ <u>–∫–æ–¥ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</u>.', parse_mode='html')
        bookingCodeExample = bot.send_photo(call.message.chat.id, booking_example)
        bot.register_next_step_handler(bookingCodeExample, bookingCode_get)
    if call.data == 'onlineTimetable_useBot':
        flightNum_msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ <b>–Ω–æ–º–µ—Ä —Ä–µ–π—Å–∞</b> –∏ <b>–¥–∞—Ç—É –≤—ã–ª–µ—Ç–∞</b> –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.\n–ù–∞–ø—Ä–∏–º–µ—Ä: SU1711 2022-09-15', parse_mode='html')
        bot.register_next_step_handler(flightNum_msg, raiseNum)
    if call.data == 'backTicketYes':
        inDate_msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ <b>–¥–∞—Ç—É –≤—ã–ª–µ—Ç–∞</b> –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î.\n–ù–∞–ø—Ä–∏–º–µ—Ä: 2022-09-16', parse_mode='html')
        bot.register_next_step_handler(inDate_msg, passCount_get)
    if call.data == 'backTicketNo':
        markup = types.InlineKeyboardMarkup()
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(back_btn)
        bot.send_message(call.message.chat.id, '–î–ï–ú–û–í–ï–†–°–ò–Ø', reply_markup=markup)
    if call.data == 'callCenter':
        bot.send_message(call.message.chat.id, '<b>–ö–æ–Ω—Ç–∞–∫—Ç—ã</b>:\n+7 (800) 444-55-55 ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–æ –ø–æ –†–æ—Å—Å–∏–∏\n+7 (495) 223-55-55 ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–æ –¥–ª—è –ú–æ—Å–∫–≤—ã', parse_mode='html')
    if call.data == 'businessTrucking':
        markup = types.InlineKeyboardMarkup(row_width=1)
        businessTruckingHowSend_btn = types.InlineKeyboardButton('–ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥—Ä—É–∑', url='https://www.aeroflot.ru/ru-ru/business/cargo_transport/howto')
        businessTruckingCallCenter_btn = types.InlineKeyboardButton('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç —Ü–µ–Ω—Ç—Ä–æ–º', callback_data='callCenter')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(businessTruckingHowSend_btn, businessTruckingCallCenter_btn, back_btn)
        bot.send_message(call.message.chat.id, '–ì—Ä—É–∑–æ–≤—ã–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏:', reply_markup=markup)
    if call.data == 'businessCorporateClients':
        markup = types.InlineKeyboardMarkup(row_width=1)
        businessCorporateClientsLoyaltyProg_btn = types.InlineKeyboardButton('–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏', url='https://www.aeroflot.ru/ru-ru/business/corporate/loyalty_programme')
        businessCoprorateClientsDirectContract_btn = types.InlineKeyboardButton('–ü—Ä—è–º–æ–π –¥–æ–≥–æ–≤–æ—Ä (–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –≤ –æ—Ñ–∏—Å–µ)', url='https://www.aeroflot.ru/ru-ru/business/corporate/direct_cooperation')
        businessCorporateClientsCallCenter_btn = types.InlineKeyboardButton('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç —Ü–µ–Ω—Ç—Ä–æ–º', callback_data='callCenter')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(businessCorporateClientsLoyaltyProg_btn, businessCoprorateClientsDirectContract_btn, businessCorporateClientsCallCenter_btn, back_btn)
        bot.send_message(call.message.chat.id, '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º', reply_markup=markup)
    if call.data == 'informationInAirport':
        markup = types.InlineKeyboardMarkup(row_width=1)
        informationInAirportDocuments_btn = types.InlineKeyboardButton('–î–æ—Ä–æ–∂–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã', callback_data='informationInAirportDocuments')
        informationInAirportControl_btn = types.InlineKeyboardButton('–ü–∞—Å–ø–æ—Ä—Ç–Ω–æ-–≤–∏–∑–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å', url='https://www.aeroflot.ru/ru-ru/information/airport/passport')
        informationInAirportPreFlight_btn = types.InlineKeyboardButton('–ü—Ä–µ–¥–ø–æ–ª—ë—Ç–Ω—ã–π –¥–æ—Å–º–æ—Ç—Ä', url='https://www.aeroflot.ru/ru-ru/information/airport/security')
        informationAirportCallCenter_btn = types.InlineKeyboardButton('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç —Ü–µ–Ω—Ç—Ä–æ–º', callback_data='callCenter')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(informationInAirportDocuments_btn, informationInAirportControl_btn, informationInAirportPreFlight_btn, informationAirportCallCenter_btn, back_btn)
        bot.send_message(call.message.chat.id, '–í –∞—ç—Ä–æ–ø–æ—Ä—Ç—É:', reply_markup=markup)
    if call.data == 'informationOnBoard':
        markup = types.InlineKeyboardMarkup(row_width=1)
        informationOnBoardSeats_btn = types.InlineKeyboardButton('–°—Ö–µ–º–∞ –ø–æ—Å–∞–¥–æ—á–Ω—ã—Ö –º–µ—Å—Ç', url='https://www.aeroflot.ru/ru-ru/information/onboard/seating')
        informationOnBoardDining_btn = types.InlineKeyboardButton('–ü–∏—Ç–∞–Ω–∏–µ –Ω–∞ –±–æ—Ä—Ç—É', url='https://www.aeroflot.ru/ru-ru/information/onboard/dining')
        informationOnBoardDevices_btn = types.InlineKeyboardButton('–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞', url='https://www.aeroflot.ru/ru-ru/information/onboard/entertainment')
        informationOnBoardCallCenter_btn = types.InlineKeyboardButton('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç —Ü–µ–Ω—Ç—Ä–æ–º', callback_data='callCenter')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(informationOnBoardSeats_btn, informationOnBoardDining_btn, informationOnBoardDevices_btn, informationOnBoardCallCenter_btn, back_btn)
        bot.send_message(call.message.chat.id, '–ù–∞ –±–æ—Ä—Ç—É:', reply_markup=markup)
    if call.data == 'informationForPassengers':
        markup = types.InlineKeyboardMarkup(row_width=1)
        informationForPassengersKids_btn = types.InlineKeyboardButton('–° –¥–µ—Ç—å–º–∏', url='https://www.aeroflot.ru/ru-ru/information/special/kids')
        informationForPassengersAnimals_btn = types.InlineKeyboardButton('–° –∂–∏–≤–æ—Ç–Ω—ã–º–∏', url='https://www.aeroflot.ru/ru-ru/information/special/animals')
        informationForPassengersDifSit_btn = types.InlineKeyboardButton('–í —Å–ª–æ–∂–Ω—ã—Ö –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö', url='https://www.aeroflot.ru/ru-ru/information/special/difficult_situations')
        informationForPassengersDisabled_btn = types.InlineKeyboardButton('–ü–∞—Å—Å–∞–∂–∏—Ä–∞–º —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –∂–∏–∑–Ω–µ–¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏', url='https://www.aeroflot.ru/ru-ru/information/special/disabled')
        informationForPassengersBanned_btn = types.InlineKeyboardButton('–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –∫ –ø–µ—Ä–µ–≤–æ–∑–∫–µ –ø—Ä–µ–¥–º–µ—Ç—ã', url='https://www.aeroflot.ru/ru-ru/information/airport/security')
        informationForPassengersCallCenter_btn = types.InlineKeyboardButton('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç —Ü–µ–Ω—Ç—Ä–æ–º', callback_data='callCenter')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(informationForPassengersKids_btn, informationForPassengersAnimals_btn, informationForPassengersDifSit_btn, informationForPassengersDisabled_btn, informationForPassengersBanned_btn, informationForPassengersCallCenter_btn, back_btn)
        bot.send_message(call.message.chat.id, '–î–ª—è –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤:', reply_markup=markup)
    if call.data == 'informationLegalInfo':
        markup = types.InlineKeyboardMarkup(row_width=1)
        informationLegalInfoTruckAgrmnt_btn = types.InlineKeyboardButton('–î–æ–≥–æ–≤–æ—Ä –ø–µ—Ä–µ–≤–æ–∑–∫–∏', url='https://www.aeroflot.ru/ru-ru/information/legal/contract')
        informationLegalInfoInsurance_btn = types.InlineKeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞—Ö–æ–≤—â–∏–∫–µ', url='https://www.aeroflot.ru/ru-ru/information/legal/insurance')
        informationLegalInfoForeign_btn = types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –≤–∏–∑—ã –¥–ª—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω—Ü–µ–≤', url='https://evisa.kdmid.ru/ru-RU/Home/Index')
        informationLegalInfoCancel_btn = types.InlineKeyboardButton('–ü—Ä–∏ –∑–∞–¥–µ—Ä–∂–∫–µ/–æ—Ç–º–µ–Ω–µ —Ä–µ–π—Å–æ–≤', url='https://www.aeroflot.ru/ru-ru/information/legal/liability')
        informationLegalInfoCallCenter_btn = types.InlineKeyboardButton('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç —Ü–µ–Ω—Ç—Ä–æ–º', callback_data='callCenter')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(informationLegalInfoTruckAgrmnt_btn, informationLegalInfoInsurance_btn, informationLegalInfoForeign_btn, informationLegalInfoCancel_btn, informationLegalInfoCallCenter_btn, back_btn)
        bot.send_message(call.message.chat.id, '–ü—Ä–∞–≤–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:', reply_markup=markup)
    if call.data == 'back':
        markupKeys = types.ReplyKeyboardMarkup(resize_keyboard=True)
        buyTickets_btn = types.KeyboardButton('‚úàÔ∏è –ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç')
        onlineRegister_btn = types.KeyboardButton('üé´ –û–Ω–ª–∞–π–Ω-—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
        bookingStatus_btn = types.KeyboardButton('üìî –°—Ç–∞—Ç—É—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è')
        onlineTimetable_btn = types.KeyboardButton('üóì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–π—Å–µ')
        tecSupport_btn = types.KeyboardButton('‚ùì –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞')
        specialOffers_btn = types.KeyboardButton('üéÅ –°–ø–µ—Ü–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')
        business_btn = types.KeyboardButton('üíº –ë–∏–∑–Ω–µ—Å')
        information_btn = types.KeyboardButton('üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
        covidInfo_btn = types.KeyboardButton('ü¶† –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Covid19')
        markupInline = types.InlineKeyboardMarkup(row_width=1)
        ratingFirst_btn = types.InlineKeyboardButton('–ü–∞—Å—Å–∞–∂–∏—Ä–∞–º —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏ (–î–ï–ú–û)', url='https://www.aeroflot.ru/ru-ru/information/special/animals',callback_data='ratingFirst')
        ratingSecond_btn = types.InlineKeyboardButton('–ü—Ä–∏ –∑–∞–¥–µ—Ä–∂–∫–µ/–æ—Ç–º–µ–Ω–µ —Ä–µ–π—Å–æ–≤ (–î–ï–ú–û)', url='https://www.aeroflot.ru/ru-ru/information/legal/liability',callback_data='ratingSecond')
        ratingThird_btn = types.InlineKeyboardButton('–ü—Ä–µ–¥–ø–æ–ª—ë—Ç–Ω—ã–π –¥–æ—Å–º–æ—Ç—Ä (–î–ï–ú–û)', url='https://www.aeroflot.ru/ru-ru/information/airport/security',callback_data='ratingThird')
        markupKeys.add(buyTickets_btn, onlineRegister_btn, bookingStatus_btn, onlineTimetable_btn, tecSupport_btn, specialOffers_btn, business_btn, information_btn, covidInfo_btn)
        markupInline.add(ratingFirst_btn, ratingSecond_btn, ratingThird_btn)
        bot.send_message(call.message.chat.id, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=markupKeys)
        bot.send_message(call.message.chat.id, '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã:', reply_markup=markupInline)
    if call.data == 'informationInAirportDocuments':
        markup = types.InlineKeyboardMarkup(row_width=1)
        roadDocsInfo_msg = roadDocsParse()
        moreInfo_btn = types.InlineKeyboardButton('–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ —Å–∞–π—Ç–µ.', url='https://www.aeroflot.ru/ru-ru/information/preparation/regulations_papers')
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(moreInfo_btn, back_btn)
        bot.send_message(call.message.chat.id, roadDocsInfo_msg, reply_markup=markup)
#–í–∑—è—Ç–∏–µ –≥–æ—Ä–æ–¥–∞ –≤—ã–ª–µ—Ç–∞
def outCity_get(message):
    outCity = message.text   
    inCity_msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ <b>–≥–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è</b>.', parse_mode='html')
    bot.register_next_step_handler(inCity_msg, inCity_get)

#–í–∑—è—Ç–∏–µ –≥–æ—Ä–æ–¥–∞ –ø—Ä–∏–±—ã—Ç–∏—è
def inCity_get(message):
    inCity = message.text
    outDate_msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ <b>–¥–∞—Ç—É –≤—ã–ª–µ—Ç–∞</b> –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î.\n–ù–∞–ø—Ä–∏–º–µ—Ä: 2022-09-15', parse_mode='html')
    bot.register_next_step_handler(outDate_msg, outDate_get)
    
#–í–∑—è—Ç–∏–µ –¥–∞—Ç—ã –≤—ã–ª–µ—Ç–∞
def outDate_get(message):
    outDate = message.text
    markup = types.InlineKeyboardMarkup()
    backTicketYes_btn = types.InlineKeyboardButton('–î–∞', callback_data='backTicketYes')
    backTicketNo_btn = types.InlineKeyboardButton('–ù–µ—Ç', callback_data='backTicketNo')
    markup.add(backTicketYes_btn, backTicketNo_btn)
    bot.send_message(message.chat.id, '–ù—É–∂–µ–Ω –æ–±—Ä–∞—Ç–Ω—ã–π –±–∏–ª–µ—Ç?', reply_markup=markup)
    
#–í–∑—è—Ç–∏–µ –¥–∞—Ç—ã –ø—Ä–∏–±—ã—Ç–∏—è
def passCount_get(message):
    inDate = message.text
    markup = types.InlineKeyboardMarkup()
    back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
    markup.add(back_btn)
    passCount_msg = bot.send_message(message.chat.id, '–î–ï–ú–û–í–ï–†–°–ò–Ø', reply_markup=markup)
    
#–í–∑—è—Ç–∏–µ –∫–æ–¥–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
def bookingCode_get(message):
    bookingCode = message.text
    bookingSurname_msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é <u>–ª–∞—Ç–∏–Ω–∏—Ü–µ–π</u>.\n–ü—Ä–∏–º–µ—Ä: IVANOV', parse_mode='html')
    bot.register_next_step_handler(bookingSurname_msg, bookingSurname_get)
    
#–í–∑—è—Ç–∏–µ —Ñ–∞–º–∏–ª–∏–∏
def bookingSurname_get(message):
    bookingSurname = message.text
    markup = types.InlineKeyboardMarkup()
    back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
    markup.add(back_btn)
    bot.send_message(message.chat.id, '<b>–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã</b>: –ù–µ –æ–ø–ª–∞—á–µ–Ω\n<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –æ–ø–ª–∞—Ç–µ</b>: 4898‚ÇΩ\n<b>–°—Ç–∞—Ç—É—Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</b>: –ù–µ –≤—ã–ø—É—â–µ–Ω—ã\n<b>–í—Ä–µ–º—è –Ω–∞ –æ–ø–ª–∞—Ç—É</b>: 6—á 16–º–∏–Ω\n(–î–ï–ú–û–í–ï–†–°–ò–Ø)', parse_mode='html', reply_markup=markup)

#–í–∑—è—Ç–∏–µ –Ω–æ–º–µ—Ä–∞ —Ä–µ–π—Å–∞
def flightNum_get(message):
    log_mes = message.text
    outDate_msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ <b>–¥–∞—Ç—É –≤—ã–ª–µ—Ç–∞</b> –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î.\n–ù–∞–ø—Ä–∏–º–µ—Ä: 2022-09-15', parse_mode='html')
    bot.register_next_step_handler(outDate_msg, )
    
#–ó–∞–ø—Ä–æ—Å –≤ –æ–Ω–ª–∞–π–Ω —Ç–∞–±–ª–æ
def raiseNum(message):
    flightInfo = message.text
    if flightInfo.count(' ') == 1:
        flightInfoSplit = flightInfo.split()
        flightNumber = flightInfoSplit[0]
        date = flightInfoSplit[1]
        bot.send_message(message.chat.id, '–ò–¥–µ—Ç –ø–æ–∏—Å–∫...')
        url = "https://flights.aeroflot.ru/api/flights/v1.1/ru/board?type=onlineboard&flightNumber="+flightNumber+"&dateFrom="+date+"+T00:00:00&dateTo="+date+"T00:00:00&timeFrom=00:00:00&timeTo=23:59:59&returnTo=23:59:59"
        payload={}
        headers = {'Cookie': 'sb_pnr_session_id=sb-m9-2-pnr-712ddce03f3ad16810108b9ce723c6b86e7c3690; session-cookie=1714a2768b2780dd8b33d0c318991a242115e6d86ee3196e4b9d0468ea070a06735615f64f0842b2eddabd0b2c492a4f', 'User-Agent':'PostmanRuntime/7.29.2'}
        response = requests.request("GET", url, headers=headers, data=payload)
        data = json.loads(response.text)
        if response.status_code==200 and len(date)==10 and len(flightNumber)==6 and len(data['data']['routes'])>0: 
            if date[4]=="-" and date[7]=='-':
                flightInfo_msg = '<u>–í—ã–ª–µ—Ç</u>:\n<b>–ì–æ—Ä–æ–¥ –≤—ã–ª–µ—Ç–∞</b>: '+data['data']['routes'][0]['leg']['departure']['scheduled']['city']+"\n<b>–ê—ç—Ä–æ–ø–æ—Ä—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</b>: "+data['data']['routes'][0]['leg']['departure']['scheduled']['airport']+"\n<b>–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</b>: "+data['data']['routes'][0]['leg']['departure']['times']['scheduledDeparture']['localTime']+'\n<u>–ü—Ä–∏–±—ã—Ç–∏–µ</u>:'+"\n<b>–ì–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è</b>: "+data['data']['routes'][0]['leg']['arrival']['scheduled']['city']+"\n<b>–ê—ç—Ä–æ–ø–æ—Ä—Ç –ø—Ä–∏–±—ã—Ç–∏—è</b>: "+data['data']['routes'][0]['leg']['arrival']['scheduled']['airport']+"\n<b>–í—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—è</b>: "+data['data']['routes'][0]['leg']['arrival']['times']['scheduledArrival']['localTime']
                markup = types.InlineKeyboardMarkup()
                back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
                markup.add(back_btn)
                bot.send_message(message.chat.id, flightInfo_msg, parse_mode='html', reply_markup=markup)
    else:
        markup = types.InlineKeyboardMarkup()
        back_btn = types.InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='back')
        markup.add(back_btn)
        bot.send_message(message.chat.id, "–†–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.", reply_markup=markup)

bot.polling(none_stop=True)